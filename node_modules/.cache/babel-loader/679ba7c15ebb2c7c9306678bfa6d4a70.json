{"ast":null,"code":"var _jsxFileName = \"/run/media/crynet/DATA/WEB/www/Other/React/test-project/src/page/aboutUs/aboutUs.js\";\nimport React, { PureComponent } from 'react';\nexport default class AboutUs extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        value\n      } = event.target;\n      this.setState({\n        value\n      });\n    };\n\n    this.state = {\n      data: [],\n      value: ''\n    };\n  }\n\n  componentWillMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(json => this.setState({\n      data: json\n    }));\n  }\n\n  render() {\n    const {\n      data,\n      value\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(SearchResults, {\n      value: value,\n      data: data,\n      renderResults: results => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, results.map(el => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, el.name), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, el.email)))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/run/media/crynet/DATA/WEB/www/Other/React/test-project/src/page/aboutUs/aboutUs.js"],"names":["React","PureComponent","AboutUs","constructor","props","handleChange","event","value","target","setState","state","data","componentWillMount","fetch","then","response","json","render","results","map","el","name","email"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AAEA,eAAe,MAAMC,OAAN,SAAsBD,aAAtB,CAAoC;AACjDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,YAZmB,GAYJC,KAAK,IAAI;AACtB,YAAM;AAAEC,QAAAA;AAAF,UAAYD,KAAK,CAACE,MAAxB;AACA,WAAKC,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACD,KAfkB;;AAEjB,SAAKG,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXJ,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AACDK,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAI,KAAKP,QAAL,CAAc;AAAEE,MAAAA,IAAI,EAAEK;AAAR,KAAd,CAFhB;AAGD;;AAKDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA,IAAF;AAAQJ,MAAAA;AAAR,QAAkB,KAAKG,KAA7B;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEH,KAA1B;AAAiC,MAAA,QAAQ,EAAE,KAAKF,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,aAAD;AACE,MAAA,KAAK,EAAEE,KADT;AAEE,MAAA,IAAI,EAAEI,IAFR;AAGE,MAAA,aAAa,EAAEO,OAAO,IACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,OAAO,CAACC,GAAR,CAAYC,EAAE,IACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,EAAE,CAACC,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOD,EAAE,CAACE,KAAV,CAFF,CADD,CADH,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAmBD;;AAtCgD","sourcesContent":["import React, {PureComponent} from 'react'\n\nexport default class AboutUs extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      value: ''\n    };\n  }\n  componentWillMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(json => this.setState({ data: json }));\n  }\n  handleChange = event => {\n    const { value } = event.target;\n    this.setState({ value });\n  };\n  render() {\n    const { data, value } = this.state;\n    return (\n      <div>\n        <input type=\"text\" value={value} onChange={this.handleChange} />\n        <SearchResults\n          value={value}\n          data={data}\n          renderResults={results => (\n            <div>\n              {results.map(el => (\n                <div>\n                  <span>{el.name}</span>\n                  <span>{el.email}</span>\n                </div>\n              ))}\n            </div>\n          )}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}