{"ast":null,"code":"var _jsxFileName = \"/run/media/crynet/DATA/WEB/www/Other/React/test-project/src/page/shop/shop.js\";\nimport React, { PureComponent } from 'react';\nimport './shop.scss'; //\n\nimport json from '../../components/json/json.js';\nimport Filter from '../../components/filter/filter.js';\nimport Filtered from '../../components/filtered/filtered.js';\nimport Search from '../../components/search/search.js';\nexport default class Shop extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: undefined,\n      filters: [],\n      items: [],\n      shoppingBasket: 0\n    };\n\n    this.onFilterChange = event => {\n      const checkboxes = [...event.currentTarget.closest(\".filter\").getElementsByTagName(\"input\")];\n      const filters = [];\n      checkboxes.map(checkbox => {\n        if (checkbox.checked) {\n          filters.push(checkbox.name);\n        }\n      });\n      this.setState({\n        filters\n      }, this.filtredInput);\n    };\n\n    this.onSearchChange = ({\n      currentTarget\n    }) => {\n      const search = currentTarget.value;\n      this.setState({\n        search\n      }, this.filtredSearch);\n    };\n  }\n\n  // фильтруем согласно выбранным фильтрам\n  filtredInput() {\n    const items = json.filter(element => this.state.filters.every(key => element[key]));\n    this.setState({\n      items\n    });\n  } // смотрим, что вводит юзер\n\n\n  // фильтруем соглассно вводу юзера\n  filtredSearch() {\n    const items = json.filter(word => word.name.toLocaleLowerCase().indexOf(this.state.search.toLocaleLowerCase()) !== -1);\n    this.setState({\n      items\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navigation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      onFilterChange: this.onFilterChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Search, {\n      onSearchChange: this.onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), this.state.items.length ? React.createElement(Filtered, {\n      items: this.state.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }) // если фильтры есть\n    : React.createElement(Filtered, {\n      items: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }) // если фильтров нет\n    );\n  }\n\n}","map":{"version":3,"sources":["/run/media/crynet/DATA/WEB/www/Other/React/test-project/src/page/shop/shop.js"],"names":["React","PureComponent","json","Filter","Filtered","Search","Shop","state","search","undefined","filters","items","shoppingBasket","onFilterChange","event","checkboxes","currentTarget","closest","getElementsByTagName","map","checkbox","checked","push","name","setState","filtredInput","onSearchChange","value","filtredSearch","filter","element","every","key","word","toLocaleLowerCase","indexOf","render","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,OAAO,aAAP,C,CACA;;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AAEA,eAAe,MAAMC,IAAN,SAAmBL,aAAnB,CAAiC;AAAA;AAAA;AAAA,SAE9CM,KAF8C,GAEtC;AACNC,MAAAA,MAAM,EAAEC,SADF;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,cAAc,EAAE;AAJV,KAFsC;;AAAA,SAU9CC,cAV8C,GAU3BC,KAAF,IAAa;AAC5B,YAAMC,UAAU,GAAG,CAAC,GAAGD,KAAK,CAACE,aAAN,CAAoBC,OAApB,CAA4B,SAA5B,EAAuCC,oBAAvC,CAA4D,OAA5D,CAAJ,CAAnB;AACA,YAAMR,OAAO,GAAG,EAAhB;AACAK,MAAAA,UAAU,CAACI,GAAX,CAAeC,QAAQ,IAAI;AACzB,YAAIA,QAAQ,CAACC,OAAb,EAAsB;AACpBX,UAAAA,OAAO,CAACY,IAAR,CAAaF,QAAQ,CAACG,IAAtB;AACD;AACF,OAJD;AAKA,WAAKC,QAAL,CAAc;AAAEd,QAAAA;AAAF,OAAd,EAA2B,KAAKe,YAAhC;AACD,KAnB6C;;AAAA,SA4B9CC,cA5B8C,GA4B7B,CAAE;AAACV,MAAAA;AAAD,KAAF,KAAuB;AACtC,YAAMR,MAAM,GAAGQ,aAAa,CAACW,KAA7B;AACA,WAAKH,QAAL,CAAc;AAAEhB,QAAAA;AAAF,OAAd,EAA0B,KAAKoB,aAA/B;AACD,KA/B6C;AAAA;;AAqB9C;AACAH,EAAAA,YAAY,GAAG;AACb,UAAMd,KAAK,GAAGT,IAAI,CAAC2B,MAAL,CAAYC,OAAO,IAAI,KAAKvB,KAAL,CAAWG,OAAX,CAAmBqB,KAAnB,CAAyBC,GAAG,IAAIF,OAAO,CAACE,GAAD,CAAvC,CAAvB,CAAd;AACA,SAAKR,QAAL,CAAe;AAACb,MAAAA;AAAD,KAAf;AACD,GAzB6C,CA2B9C;;;AAMA;AACAiB,EAAAA,aAAa,GAAG;AACd,UAAMjB,KAAK,GAAGT,IAAI,CAAC2B,MAAL,CAAYI,IAAI,IAC1BA,IAAI,CAACV,IAAL,CAAUW,iBAAV,GAA8BC,OAA9B,CAAsC,KAAK5B,KAAL,CAAWC,MAAX,CAAkB0B,iBAAlB,EAAtC,MAAiF,CAAC,CADxE,CAAd;AAGA,SAAKV,QAAL,CAAe;AAACb,MAAAA;AAAD,KAAf;AACD;;AAEDyB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,cAAc,EAAE,KAAKvB,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,cAAc,EAAE,KAAKa,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAMI,KAAKnB,KAAL,CAAWI,KAAX,CAAiB0B,MAAjB,GACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWI,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAC0C;AAD1C,MAEI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARR,CAQmC;AARnC,KADF;AAaD;;AAvD6C","sourcesContent":["import React, {PureComponent} from 'react'\nimport './shop.scss';\n//\nimport json from '../../components/json/json.js'\nimport Filter from '../../components/filter/filter.js'\nimport Filtered from '../../components/filtered/filtered.js'\nimport Search from '../../components/search/search.js';\n\nexport default class Shop extends PureComponent {\n  // задаём стейт\n  state = {\n    search: undefined,\n    filters: [],\n    items: [],\n    shoppingBasket: 0\n  };\n\n  // проверяем какие фильтры выбрал юзер\n  onFilterChange = ( event ) => {\n    const checkboxes = [...event.currentTarget.closest(\".filter\").getElementsByTagName(\"input\")]\n    const filters = [];\n    checkboxes.map(checkbox => {\n      if (checkbox.checked) {\n        filters.push(checkbox.name);\n      }\n    });\n    this.setState({ filters }, this.filtredInput);\n  }\n\n  // фильтруем согласно выбранным фильтрам\n  filtredInput() {\n    const items = json.filter(element => this.state.filters.every(key => element[key]));\n    this.setState( {items} )\n  }\n\n  // смотрим, что вводит юзер\n  onSearchChange = ( {currentTarget} ) => {\n    const search = currentTarget.value\n    this.setState({ search }, this.filtredSearch )\n  }\n\n  // фильтруем соглассно вводу юзера\n  filtredSearch() {\n    const items = json.filter(word =>\n        word.name.toLocaleLowerCase().indexOf(this.state.search.toLocaleLowerCase()) !== -1\n    )\n    this.setState( {items} )\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"navigation\">\n          <Filter onFilterChange={this.onFilterChange} />\n          <Search onSearchChange={this.onSearchChange} />\n        </div>\n        {\n          this.state.items.length\n            ? <Filtered items={this.state.items} /> // если фильтры есть\n            : <Filtered items={false} /> // если фильтров нет\n        }\n      </div>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}