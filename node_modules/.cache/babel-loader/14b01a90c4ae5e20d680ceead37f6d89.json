{"ast":null,"code":"var _jsxFileName = \"/run/media/crynet/DATA/WEB/www/Other/React/test-project/src/components/app/App.js\";\nimport React, { PureComponent } from 'react';\nimport './App.scss'; //\n\nimport json from '../json/json.js';\nimport Filter from '../filter/filter.js'; //\n\nimport Item from '../item/item.js'; // import { Route } from \"react-router\";\n\nexport default class App extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filter: {\n        new: false,\n        action: false\n      }\n    };\n\n    this.filterItems = ({\n      target: {\n        name,\n        checked\n      }\n    }) => {\n      this.setState({\n        filter: {\n          [name]: checked\n        }\n      });\n      json.forEach(element => {\n        const state = Object(this.state.filter);\n        setTimeout(() => {\n          console.log(state);\n        }, 3000);\n      }); // const keys = Object(this.state.filter);\n      // const item = json.filter(element => keys.every(key => this.state.filter[key] === element[key] ));\n      // console.log( item );\n      // const el = json.filter((element) => {\n      //   if (element.action == this.state.filter.action) {\n      //     return true\n      //   }\n      // })\n      // console.log( el );\n      // const filters = Object.entries( this.state.filter ).filter(n => n[1]).map(n => n[0]);\n      // const filteredItems = json.filter(n => filters.every(m => n[m]));\n      // console.log( filteredItems );\n    };\n  }\n\n  render() {\n    let txt;\n\n    if (this.state.filter.new == true) {\n      txt = \"checked\";\n    } else {\n      txt = \"uchecked\";\n    }\n\n    let txt1;\n\n    if (this.state.filter.action == true) {\n      txt1 = \"checked\";\n    } else {\n      txt1 = \"uchecked\";\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      filterItems: this.filterItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"\\u041D\\u043E\\u0432\\u0438\\u043D\\u043A\\u0438 \", txt), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"\\u0410\\u043A\\u0446\\u0438\\u0438 \", txt1));\n  }\n\n} // isTrusted, type","map":{"version":3,"sources":["/run/media/crynet/DATA/WEB/www/Other/React/test-project/src/components/app/App.js"],"names":["React","PureComponent","json","Filter","Item","App","state","filter","new","action","filterItems","target","name","checked","setState","forEach","element","Object","setTimeout","console","log","render","txt","txt1"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,OAAO,YAAP,C,CACA;;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,iBAAjB,C,CACA;;AAEA,eAAe,MAAMC,GAAN,SAAkBJ,aAAlB,CAAgC;AAAA;AAAA;AAAA,SAC7CK,KAD6C,GACrC;AACNC,MAAAA,MAAM,EAAG;AACPC,QAAAA,GAAG,EAAG,KADC;AAEPC,QAAAA,MAAM,EAAG;AAFF;AADH,KADqC;;AAAA,SAS7CC,WAT6C,GAS/B,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAAV,KAAD,KAAmC;AAC/C,WAAKC,QAAL,CAAc;AACZP,QAAAA,MAAM,EAAE;AAAE,WAACK,IAAD,GAASC;AAAX;AADI,OAAd;AAIAX,MAAAA,IAAI,CAACa,OAAL,CAAaC,OAAO,IAAI;AACtB,cAAMV,KAAK,GAAGW,MAAM,CAAC,KAAKX,KAAL,CAAWC,MAAZ,CAApB;AAEAW,QAAAA,UAAU,CAAC,MAAM;AACfC,UAAAA,OAAO,CAACC,GAAR,CAAad,KAAb;AACD,SAFS,EAEP,IAFO,CAAV;AAGD,OAND,EAL+C,CAc/C;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACD,KAzC4C;AAAA;;AA4C7Ce,EAAAA,MAAM,GAAG;AACP,QAAIC,GAAJ;;AACA,QAAI,KAAKhB,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,IAAyB,IAA7B,EAAmC;AACjCc,MAAAA,GAAG,GAAG,SAAN;AACD,KAFD,MAEO;AACLA,MAAAA,GAAG,GAAG,UAAN;AACD;;AAED,QAAIC,IAAJ;;AACA,QAAI,KAAKjB,KAAL,CAAWC,MAAX,CAAkBE,MAAlB,IAA4B,IAAhC,EAAsC;AACpCc,MAAAA,IAAI,GAAG,SAAP;AACD,KAFD,MAEO;AACLA,MAAAA,IAAI,GAAG,UAAP;AACD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKb,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACWY,GADX,CAHF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACSC,IADT,CANF,CADF;AAYD;;AAvE4C,C,CA0E/C","sourcesContent":["import React, {PureComponent} from 'react'\nimport './App.scss';\n//\nimport json from '../json/json.js'\nimport Filter from '../filter/filter.js'\n//\nimport Item from '../item/item.js'\n// import { Route } from \"react-router\";\n\nexport default class App extends PureComponent {\n  state = {\n    filter : {\n      new : false,\n      action : false\n    }\n  };\n\n\n  filterItems = ({ target: { name, checked } }) => {\n    this.setState({\n      filter: { [name] : checked, }\n    });\n\n    json.forEach(element => {\n      const state = Object(this.state.filter)\n\n      setTimeout(() => {\n        console.log( state );\n      }, 3000);\n    });\n\n\n    // const keys = Object(this.state.filter);\n    // const item = json.filter(element => keys.every(key => this.state.filter[key] === element[key] ));\n\n    // console.log( item );\n\n    // const el = json.filter((element) => {\n    //   if (element.action == this.state.filter.action) {\n    //     return true\n    //   }\n    // })\n\n    // console.log( el );\n\n\n    // const filters = Object.entries( this.state.filter ).filter(n => n[1]).map(n => n[0]);\n    // const filteredItems = json.filter(n => filters.every(m => n[m]));\n\n    // console.log( filteredItems );\n  }\n\n\n  render() {\n    let txt\n    if (this.state.filter.new == true) {\n      txt = \"checked\"\n    } else {\n      txt = \"uchecked\"\n    }\n\n    let txt1\n    if (this.state.filter.action == true) {\n      txt1 = \"checked\"\n    } else {\n      txt1 = \"uchecked\"\n    }\n\n    return (\n      <div>\n        <Filter filterItems={this.filterItems} />\n        <Item />\n        <p>\n          Новинки {txt}\n        </p>\n        <p>\n          Акции {txt1}\n        </p>\n      </div>\n    )\n  }\n}\n\n// isTrusted, type\n"]},"metadata":{},"sourceType":"module"}