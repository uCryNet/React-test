{"ast":null,"code":"var _jsxFileName = \"/run/media/crynet/DATA/WEB/www/Other/React/test-project/src/components/app/App.js\";\nimport React, { PureComponent } from 'react';\nimport './App.scss'; //\n\nimport json from '../json/json.js';\nimport Filter from '../filter/filter.js';\nimport Filtered from '../filtered/filtered.js';\nimport Search from '../search/search.js';\nexport default class App extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      filters: [],\n      items: []\n    };\n\n    this.filterItems = event => {\n      const checkboxes = [...event.currentTarget.closest(\".filter\").getElementsByTagName(\"input\")];\n      const filters = [];\n      checkboxes.map(checkbox => {\n        if (checkbox.checked) {\n          filters.push(checkbox.name);\n        }\n      });\n      this.setState({\n        filters\n      });\n      this.filterEl(json);\n    };\n\n    this.searchItems = ({\n      currentTarget\n    }) => {\n      const search = currentTarget.value;\n      let items;\n      this.setState({\n        search\n      }); // console.log( this.state.items );\n\n      if (this.state.items.length) {\n        // items = this.state.items\n        this.filterEl(this.state.items);\n      } else {\n        // items = json\n        this.filterEl(json);\n      }\n\n      const result = items.filter(word => word.name.toLocaleLowerCase().indexOf(this.state.search.toLocaleLowerCase()) !== -1);\n    };\n  }\n\n  filter(nonFiltred) {\n    // К каждому element примеряем filters.every, где в filters будут лежать фильтры\n    const items = nonFiltred.filter(element => filters.every(key => element[key]));\n    this.setState({\n      items\n    });\n    const result = items.filter(word => word.name.toLocaleLowerCase().indexOf(this.state.search.toLocaleLowerCase()) !== -1);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navigation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      filterItems: this.filterItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Search, {\n      searchItems: this.searchItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), this.state.filters.length ? React.createElement(Filtered, {\n      items: this.state.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }) // если фильтры есть\n    : React.createElement(Filtered, {\n      items: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }) // если фильтров нет\n    );\n  }\n\n}","map":{"version":3,"sources":["/run/media/crynet/DATA/WEB/www/Other/React/test-project/src/components/app/App.js"],"names":["React","PureComponent","json","Filter","Filtered","Search","App","state","search","filters","items","filterItems","event","checkboxes","currentTarget","closest","getElementsByTagName","map","checkbox","checked","push","name","setState","filterEl","searchItems","value","length","result","filter","word","toLocaleLowerCase","indexOf","nonFiltred","element","every","key","render"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react'\nimport './App.scss';\n//\nimport json from '../json/json.js'\nimport Filter from '../filter/filter.js'\nimport Filtered from '../filtered/filtered.js'\nimport Search from '../search/search.js';\n\nexport default class App extends PureComponent {\n  // задаём стейт\n  state = {\n    search: \"\",\n    filters: [],\n    items: [],\n  };\n  // проверяем какие фильтры выбрал юзер, а потом добавляем это в стейт\n  filterItems = ( event ) => {\n    const checkboxes = [...event.currentTarget.closest(\".filter\").getElementsByTagName(\"input\")]\n    const filters = [];\n    checkboxes.map(checkbox => {\n      if (checkbox.checked) {\n        filters.push(checkbox.name);\n      }\n    });\n    this.setState({ filters });\n\n    this.filterEl(json)\n  }\n\n  // поиск по айтемам\n  searchItems = ( {currentTarget} ) => {\n    const search = currentTarget.value\n    let items\n\n    this.setState({ search })\n\n    // console.log( this.state.items );\n\n    if(this.state.items.length) {\n      // items = this.state.items\n      this.filterEl (this.state.items)\n    } else {\n      // items = json\n      this.filterEl (json)\n    }\n\n    const result = items.filter(word =>\n      word.name\n        .toLocaleLowerCase()\n        .indexOf(this.state.search.toLocaleLowerCase()) !== -1\n    )\n  }\n\n\n  filter(nonFiltred) {\n        // К каждому element примеряем filters.every, где в filters будут лежать фильтры\n        const items = nonFiltred.filter(element => filters.every(key => element[key]));\n        this.setState( {items} )\n\n        const result = items.filter(word =>\n          word.name\n            .toLocaleLowerCase()\n            .indexOf(this.state.search.toLocaleLowerCase()) !== -1\n        )\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"navigation\">\n          <Filter filterItems={this.filterItems} />\n          <Search searchItems={this.searchItems} />\n        </div>\n        {\n          this.state.filters.length\n            ? <Filtered items={this.state.items} /> // если фильтры есть\n            : <Filtered items={false} /> // если фильтров нет\n        }\n      </div>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}