{"ast":null,"code":"var _jsxFileName = \"/run/media/crynet/DATA/WEB/www/Other/React/test-project/src/components/app/App.js\";\nimport React, { PureComponent } from 'react';\nimport './App.scss'; //\n\nimport json from '../json/json.js';\nimport Filter from '../filter/filter.js'; //\n\nimport Item from '../item/item.js'; // import { Route } from \"react-router\";\n\nexport default class App extends PureComponent {\n  constructor() {\n    super();\n\n    this.filter2 = event => {\n      const checkboxes = event.currentTarget.getElementsByTagName(\"input\");\n      console.log(checkboxes);\n      const filters = [];\n      Object.values(checkboxes).map(checkbox => {\n        if (checkbox.checked) {\n          filters.push(checkbox.value);\n        }\n      });\n      this.setState({\n        filters\n      });\n      console.log(this.state.filters);\n    };\n\n    this.state = {\n      filters: []\n    };\n    this.food = [{\n      type: \"fruits\",\n      name: \"Banana\",\n      image: \"http://www.arrms.org/media/blogs/blog/banana.jpg?mtime=1417645870\"\n    }, {\n      type: \"meat\",\n      name: \"Steak\",\n      image: \"url\"\n    }, {\n      type: \"drinks\",\n      name: \"Juice\",\n      image: \"url\"\n    }];\n  }\n\n  render() {\n    console.log(this.state.filters);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onChange: this.filter2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"fruits\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Fruits\", React.createElement(\"input\", {\n      className: \"fruits\",\n      value: \"fruits\",\n      type: \"checkbox\",\n      name: \"fruits\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      htmlFor: \"meat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Meat\", React.createElement(\"input\", {\n      value: \"meat\",\n      type: \"checkbox\",\n      name: \"meat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      htmlFor: \"meat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Drinks\", React.createElement(\"input\", {\n      value: \"drinks\",\n      type: \"checkbox\",\n      name: \"meat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.food.filter(item => this.state.filters.indexOf(item.type) >= 0).map((filtered, index) => {\n      return React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, filtered.name, React.createElement(\"img\", {\n        src: filtered.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    })));\n  }\n\n} // isTrusted, type","map":{"version":3,"sources":["/run/media/crynet/DATA/WEB/www/Other/React/test-project/src/components/app/App.js"],"names":["React","PureComponent","json","Filter","Item","App","constructor","filter2","event","checkboxes","currentTarget","getElementsByTagName","console","log","filters","Object","values","map","checkbox","checked","push","value","setState","state","food","type","name","image","render","filter","item","indexOf","filtered","index"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react'\nimport './App.scss';\n//\nimport json from '../json/json.js'\nimport Filter from '../filter/filter.js'\n//\nimport Item from '../item/item.js'\n// import { Route } from \"react-router\";\n\nexport default class App extends PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      filters: []\n    };\n    this.food = [\n      {\n        type: \"fruits\",\n        name: \"Banana\",\n        image:\n          \"http://www.arrms.org/media/blogs/blog/banana.jpg?mtime=1417645870\"\n      },\n      {\n        type: \"meat\",\n        name: \"Steak\",\n        image: \"url\"\n      },\n      {\n        type: \"drinks\",\n        name: \"Juice\",\n        image: \"url\"\n      }\n    ];\n  }\n\n  filter2 = event => {\n    const checkboxes = event.currentTarget.getElementsByTagName(\"input\");\n    console.log(checkboxes);\n    const filters = [];\n    Object.values(checkboxes).map(checkbox => {\n      if (checkbox.checked) {\n        filters.push(checkbox.value);\n      }\n    });\n    this.setState({ filters });\n    console.log(this.state.filters);\n  };\n\n  render() {\n    console.log(this.state.filters);\n    return (\n      <div>\n        <form onChange={this.filter2}>\n          <label htmlFor=\"fruits\">Fruits\n          <input\n            className=\"fruits\"\n            value=\"fruits\"\n            type=\"checkbox\"\n            name=\"fruits\"\n          /></label>\n          <label htmlFor=\"meat\">Meat\n          <input value=\"meat\" type=\"checkbox\" name=\"meat\" /></label>\n\n          <label htmlFor=\"meat\">Drinks<input value=\"drinks\" type=\"checkbox\" name=\"meat\" /></label>\n        </form>\n        <ul>\n          {this.food\n            .filter(item => this.state.filters.indexOf(item.type) >= 0)\n            .map((filtered, index) => {\n              return (\n                <li key={index}>\n                  {filtered.name}\n                  <img src={filtered.image} />\n                </li>\n              );\n            })}\n        </ul>\n      </div>\n    );\n  }\n}\n\n// isTrusted, type\n"]},"metadata":{},"sourceType":"module"}