{"ast":null,"code":"var _jsxFileName = \"/run/media/crynet/DATA/WEB/www/Other/React/test-project/src/components/app/App.js\";\nimport React, { PureComponent } from 'react';\nimport './App.scss'; //\n\nimport json from '../json/json.js';\nimport Filter from '../filter/filter.js'; //\n\nimport Item from '../item/item.js'; // import { Route } from \"react-router\";\n\nexport default class App extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filters: []\n    };\n\n    this.filterItems = ({\n      target: {\n        name,\n        checked\n      }\n    }) => {\n      console.log(name);\n      this.setState({\n        filter: {\n          [name]: checked\n        }\n      });\n    };\n  }\n\n  render() {\n    // let txt\n    // if (this.state.filter.new == true) {\n    //   txt = \"checked\"\n    // } else {\n    //   txt = \"uchecked\"\n    // }\n    // let txt1\n    // if (this.state.filter.action == true) {\n    //   txt1 = \"checked\"\n    // } else {\n    //   txt1 = \"uchecked\"\n    // }\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      filterItems: this.filterItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n} // isTrusted, type","map":{"version":3,"sources":["/run/media/crynet/DATA/WEB/www/Other/React/test-project/src/components/app/App.js"],"names":["React","PureComponent","json","Filter","Item","App","state","filters","filterItems","target","name","checked","console","log","setState","filter","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,OAAO,YAAP,C,CACA;;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,iBAAjB,C,CACA;;AAEA,eAAe,MAAMC,GAAN,SAAkBJ,aAAlB,CAAgC;AAAA;AAAA;AAAA,SAC7CK,KAD6C,GACrC;AACNC,MAAAA,OAAO,EAAE;AADH,KADqC;;AAAA,SAM7CC,WAN6C,GAM/B,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAAV,KAAD,KAAmC;AAE/CC,MAAAA,OAAO,CAACC,GAAR,CAAaH,IAAb;AACA,WAAKI,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAG;AACP,WAACL,IAAD,GAAQC;AADD;AADG,OAAd;AAMD,KAf4C;AAAA;;AAiB7CK,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKR,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAYD;;AA5C4C,C,CA+C/C","sourcesContent":["import React, {PureComponent} from 'react'\nimport './App.scss';\n//\nimport json from '../json/json.js'\nimport Filter from '../filter/filter.js'\n//\nimport Item from '../item/item.js'\n// import { Route } from \"react-router\";\n\nexport default class App extends PureComponent {\n  state = {\n    filters: []\n  };\n\n\n  filterItems = ({ target: { name, checked } }) => {\n\n    console.log( name );\n    this.setState({\n      filter : {\n        [name]: checked,\n      }\n    });\n\n  }\n\n  render() {\n    // let txt\n    // if (this.state.filter.new == true) {\n    //   txt = \"checked\"\n    // } else {\n    //   txt = \"uchecked\"\n    // }\n\n    // let txt1\n    // if (this.state.filter.action == true) {\n    //   txt1 = \"checked\"\n    // } else {\n    //   txt1 = \"uchecked\"\n    // }\n\n    return (\n      <div>\n        <Filter filterItems={this.filterItems} />\n        <Item />\n        <p>\n          {/* Новинки {txt} */}\n        </p>\n        <p>\n          {/* Акции {txt1} */}\n        </p>\n      </div>\n    )\n  }\n}\n\n// isTrusted, type\n"]},"metadata":{},"sourceType":"module"}